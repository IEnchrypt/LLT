import 'package:awesome_notifications/awesome_notifications.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:adhan_dart/adhan_dart.dart';
import 'package:geolocator/geolocator.dart';
import 'package:jhijri/jHijri.dart';
import 'package:csv/csv.dart';

class PrayerScreen extends StatefulWidget {
  const PrayerScreen({super.key});

  @override
  State<PrayerScreen> createState() => _PrayerScreenState();
}

class _PrayerScreenState extends State<PrayerScreen> {
  late PrayerTimes prayerTimes;
  late DateTime date;
  late Coordinates coordinates;
  late CalculationParameters params;
  Position? _currentLocation;
  late bool servicePermission = false;
  late LocationPermission permission;
  String _currentAdress = '';

  @override
  Future<Position> _getCurrentLocation() async {
    servicePermission = await Geolocator.isLocationServiceEnabled();
    if (!servicePermission) {
      permission = await Geolocator.checkPermission();
      if (permission == LocationPermission.denied) {
        permission = await Geolocator.requestPermission();
      }
    }
    return await Geolocator.getCurrentPosition();
  }

  List<List<dynamic>> _data = [];
  @override
  void _loadCSV() async {
    final rawData = await rootBundle.loadString("assets/FullYearTiming-2.csv");
    List<List<dynamic>> listData = const CsvToListConverter().convert(rawData);
    setState(() {
      _data = listData;
    });
  }

  @override
  void initState() {
    DateTime date = (DateTime.now());
    Coordinates coordinates =
        Coordinates(53.506516477842055, -2.2445736729918266);
    CalculationParameters params = CalculationMethod.UmmAlQura();
    params.madhab = Madhab.Shafi;
    prayerTimes = PrayerTimes(coordinates, date, params, precision: true);
    AwesomeNotifications().isNotificationAllowed().then((isAllowed) {
      if (!isAllowed) {
        AwesomeNotifications().requestPermissionToSendNotifications();
      }
    });
    triggernotif();

    ///Noti.showBigTextNotification(title: "New message title",body: "Your long body",fln: flutterLocalNotificationsPlugin);
    _loadCSV();
    super.initState();
  }

  triggernotif() {
    DateTime date = (DateTime.now());
    AwesomeNotifications().createNotification(
        content: NotificationContent(
            id: 12,
            channelKey: 'channelKey',
            title: 'Prayers',
            body: 'Current Prayer ${prayerTimes.currentPrayer(date: date)} ' +
                'Next Prayer ${prayerTimes.nextPrayer()}',
            notificationLayout: NotificationLayout.BigPicture,
            bigPicture: 'resource://drawable/launcher_icon'));
  }

  double getSmallDiameter(BuildContext context) =>
      MediaQuery.of(context).size.width * 2 / 3;

  double getBigDiameter(BuildContext context) =>
      MediaQuery.of(context).size.width * 7 / 8;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color.fromARGB(246, 240, 240, 244),
      body: Stack(
        alignment: Alignment.center,
        children: [
          new Container(
            decoration: new BoxDecoration(
              image: new DecorationImage(
                image: new AssetImage("assets/bg.png"),
                fit: BoxFit.cover,
              ),
            ),
          ),
          Positioned(
              top: -getSmallDiameter(context) / 2.8,
              child: Image.asset(
                "assets/image.png",
                width: getBigDiameter(context) * 1.15,
                height: getBigDiameter(context),
              )),
          Positioned(
              top: -getSmallDiameter(context) / 30 + 50,
              child: Image.asset(
                "assets/New-Logo-A-Sunnah-Mosque-01 1.png",
                alignment: Alignment.center,
                width: getBigDiameter(context) / 4,
                height: getBigDiameter(context) / 4,
              )),
          Align(
            alignment: Alignment.bottomCenter,
            child: ListView(
              children: [
                Container(
                  margin: EdgeInsets.fromLTRB(2, 110, 10, 1),
                  padding: EdgeInsets.fromLTRB(30, 0, 30, 0),
                  width: MediaQuery.of(context).size.width * 0.5,
                  height: 26,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: Colors.transparent,
                    child: Center(
                      child: Text(
                        "${DateTime.now().hour}:${minutes()}",
                        style: TextStyle(
                          color: Colors.black,
                          fontSize: 25,
                          fontWeight: FontWeight.w700,
                        ),
                      ),
                    ),
                  ),
                ),
                Container(
                  padding: EdgeInsets.fromLTRB(10, 0, 10, 0),
                  width: MediaQuery.of(context).size.width * 0.5,
                  height: 30,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: Colors.transparent,
                    child: Center(
                      child: Text(
                        getDateg(),
                        style: TextStyle(
                          color: Colors.black,
                          fontSize: 25,
                          fontWeight: FontWeight.w700,
                        ),
                      ),
                    ),
                  ),
                ),
                Container(
                  padding: EdgeInsets.fromLTRB(10, 0, 10, 0),
                  width: MediaQuery.of(context).size.width * 0.5,
                  height: 30,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: Colors.transparent,
                    child: Center(
                      child: Text(
                        getDate(),
                        style: TextStyle(
                          color: Colors.black,
                          fontSize: 25,
                          fontWeight: FontWeight.w700,
                        ),
                      ),
                    ),
                  ),
                ),
                Container(
                    margin: EdgeInsets.fromLTRB(1, 35, 1, 1),
                    width: MediaQuery.of(context).size.width,
                    height: 25,
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(20),
                    ),
                    child: Material(
                      borderRadius: BorderRadius.circular(10),
                      color: Colors.transparent,
                      child: Center(
                          child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                              children: [
                            Container(
                                decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(10),
                                ),
                                child: Material(
                                  borderRadius: BorderRadius.circular(10),
                                  color: Color.fromARGB(255, 185, 213, 187),
                                  child: Text(
                                    " PRAYER ",
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 18,
                                      fontWeight: FontWeight.w700,
                                    ),
                                  ),
                                )),
                            Container(
                                decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(10),
                                ),
                                child: Material(
                                  borderRadius: BorderRadius.circular(10),
                                  color: Color.fromARGB(255, 185, 213, 187),
                                  child: Text(
                                    " ADHAN ",
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 18,
                                      fontWeight: FontWeight.w700,
                                    ),
                                  ),
                                )),
                            Container(
                                decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(10),
                                ),
                                child: Material(
                                  borderRadius: BorderRadius.circular(10),
                                  color: Color.fromARGB(255, 185, 213, 187),
                                  child: Text(
                                    " IQAMAH ",
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 18,
                                      fontWeight: FontWeight.w700,
                                    ),
                                  ),
                                ))
                          ])),
                    )),
                Container(
                  margin: EdgeInsets.fromLTRB(15, 1, 15, 3),
                  width: MediaQuery.of(context).size.width * 0.5 + 50,
                  height: 72,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: getCorrectColor_Salat('fajr'),
                    child: Center(
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                            children: [
                          Column(
                            children: [
                              Text(
                                "الفجر",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('fajr'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                              Text(
                                "Fajr",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('fajr'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                            ],
                          ),
                          Text(
                            loadCSV('fs').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('fajr'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                          Text(
                            loadCSV('fp').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('fajr'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                        ])),
                  ),
                ),
                Container(
                  margin: EdgeInsets.fromLTRB(15, 1, 15, 3),
                  width: MediaQuery.of(context).size.width * 0.5 + 50,
                  height: 72,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                    color: getCorrectColor_Salat('dhuhr'),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: Colors.transparent,
                    child: Center(
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                            children: [
                          Column(children: [
                            Text(
                              "الظهر",
                              style: TextStyle(
                                color: getCorrectColor_SalatText('dhuhr'),
                                fontSize: 25,
                                fontWeight: FontWeight.w700,
                              ),
                            ),
                            Text(
                              "Dhuhr",
                              style: TextStyle(
                                color: getCorrectColor_SalatText('dhuhr'),
                                fontSize: 25,
                                fontWeight: FontWeight.w700,
                              ),
                            ),
                          ]),
                          Text(
                            loadCSV('ds').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('dhuhr'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                          Text(
                            loadCSV('dp').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('dhuhr'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                        ])),
                  ),
                ),
                Container(
                  margin: EdgeInsets.fromLTRB(15, 1, 15, 3),
                  width: MediaQuery.of(context).size.width * 0.5 + 50,
                  height: 72,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: getCorrectColor_Salat('asr'),
                    child: Center(
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                            children: [
                          Column(
                            children: [
                              Text(
                                "العصر",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('asr'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                              Text(
                                "Asr",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('asr'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                            ],
                          ),
                          Text(
                            loadCSV('as').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('asr'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                          Text(
                            loadCSV('ap').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('asr'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                        ])),
                  ),
                ),
                Container(
                  margin: EdgeInsets.fromLTRB(15, 1, 15, 3),
                  width: MediaQuery.of(context).size.width * 0.5 + 50,
                  height: 72,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: getCorrectColor_Salat('maghrib'),
                    child: Center(
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                            children: [
                          Column(
                            children: [
                              Text(
                                "المغرب",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('maghrib'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                              Text(
                                "Maghrib",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('maghrib'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                            ],
                          ),
                          Text(
                            loadCSV('ms').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('maghrib'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                          Text(
                            loadCSV('mp').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('maghrib'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                        ])),
                  ),
                ),
                Container(
                  margin: EdgeInsets.fromLTRB(15, 1, 15, 3),
                  width: MediaQuery.of(context).size.width * 0.5 + 50,
                  height: 72,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Material(
                    borderRadius: BorderRadius.circular(10),
                    color: getCorrectColor_Salat('isha'),
                    child: Center(
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                            children: [
                          Column(
                            children: [
                              Text(
                                "العشاء",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('isha'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                              Text(
                                "Isha",
                                style: TextStyle(
                                  color: getCorrectColor_SalatText('isha'),
                                  fontSize: 25,
                                  fontWeight: FontWeight.w700,
                                ),
                              ),
                            ],
                          ),
                          Text(
                            loadCSV('is').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('isha'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                          Text(
                            loadCSV('ip').toString(),
                            style: TextStyle(
                              color: getCorrectColor_SalatText('isha'),
                              fontSize: 30,
                              fontWeight: FontWeight.w700,
                            ),
                          ),
                        ])),
                  ),
                ),
                Container(
                  margin: EdgeInsets.fromLTRB(1, 10, 1, 1),
                  child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        Container(
                            height: 80,
                            width: 80,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(10),
                            ),
                            child: Material(
                              borderRadius: BorderRadius.circular(10),
                              color: const Color.fromARGB(255, 172, 207, 173),
                              child: Column(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceEvenly,
                                  children: [
                                    Text(
                                      "الجمعة",
                                      style: TextStyle(
                                          fontSize: 15,
                                          color: Colors.black,
                                          fontWeight: FontWeight.bold),
                                    ),
                                    Text(
                                      "Jummuah",
                                      style: TextStyle(
                                          fontSize: 15,
                                          color: Colors.black,
                                          fontWeight: FontWeight.bold),
                                    ),
                                    Text(
                                      "13:30",
                                      style: TextStyle(
                                          fontSize: 15,
                                          color: Colors.black,
                                          fontWeight: FontWeight.bold),
                                    ),
                                  ]),
                            )),
                        Container(
                            height: 80,
                            width: 80,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(10),
                            ),
                            child: Material(
                              borderRadius: BorderRadius.circular(10),
                              color: const Color.fromARGB(255, 172, 207, 173),
                              child: Column(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceEvenly,
                                  children: [
                                    Text(
                                      "الزوال",
                                      style: TextStyle(
                                          fontSize: 15,
                                          color: Colors.black,
                                          fontWeight: FontWeight.bold),
                                    ),
                                    Text(
                                      "Zawal",
                                      style: TextStyle(
                                          fontSize: 15,
                                          color: Colors.black,
                                          fontWeight: FontWeight.bold),
                                    ),
                                    Text(
                                      "${prayerTimes.dhuhr!.hour}:${prayerTimes.dhuhr!.minute}",
                                      style: TextStyle(
                                          fontSize: 15,
                                          color: Colors.black,
                                          fontWeight: FontWeight.bold),
                                    ),
                                  ]),
                            )),
                        Container(
                            height: 80,
                            width: 80,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(10),
                            ),
                            child: Material(
                                borderRadius: BorderRadius.circular(10),
                                color: Color.fromARGB(255, 172, 207, 173),
                                child: Column(
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceEvenly,
                                    children: [
                                      Text(
                                        " الشروق ",
                                        style: TextStyle(
                                            fontSize: 15,
                                            color: Colors.black,
                                            fontWeight: FontWeight.bold),
                                      ),
                                      Text(
                                        "Sunrise",
                                        style: TextStyle(
                                            fontSize: 15,
                                            color: Colors.black,
                                            fontWeight: FontWeight.bold),
                                      ),
                                      Text(
                                        loadCSV('sunrise').toString(),
                                        style: TextStyle(
                                            fontSize: 15,
                                            color: Colors.black,
                                            fontWeight: FontWeight.bold),
                                      ),
                                    ]))),
                      ]),
                ),
              ],
            ),
          )
        ],
      ),
    );
  }
}

Color getCorrectColor_Salat(salat) {
  DateTime date = (DateTime.now());
  Coordinates coordinates =
      Coordinates(53.506516477842055, -2.2445736729918266);
  CalculationParameters params = CalculationMethod.UmmAlQura();
  params.madhab = Madhab.Shafi;
  List prayers = ['fajr', 'dhuhr', 'asr', 'maghrib', 'isha'];
  var prayerTimes = PrayerTimes(coordinates, date, params, precision: true);
  if (prayerTimes.nextPrayer(date: date) == salat) {
    return Color.fromARGB(255, 17, 89, 50);
  }
  ;
  //if (prayerTimes.nextPrayer(date: date) == salat) {
  //  return Color.fromARGB(255, 160, 207, 162);
  //}
  //;

  return Colors.transparent;
}

Color getCorrectColor_SalatText(salat) {
  DateTime date = (DateTime.now());
  Coordinates coordinates =
      Coordinates(53.506516477842055, -2.2445736729918266);
  CalculationParameters params = CalculationMethod.UmmAlQura();
  params.madhab = Madhab.Shafi;
  List prayers = ['fajr', 'dhuhr', 'asr', 'maghrib', 'isha'];
  var prayerTimes = PrayerTimes(coordinates, date, params, precision: true);
  if (prayerTimes.nextPrayer(date: date) == salat) {
    return Color.fromARGB(255, 255, 255, 255);
  }
  ;
  //if (prayerTimes.nextPrayer(date: date) == salat) {
  //  return Color.fromARGB(255, 160, 207, 162);
  //}
  //;

  return Colors.black;
}

sevdata(data) {
  CollectionReference events =
      FirebaseFirestore.instance.collection('prayers-time');
}

getDateserv() {
  List mounths = [
    'Jan',
    'Feb',
    'Mar',
    'Apr',
    'May',
    'June',
    'July',
    'Aug',
    'Sep',
    'Oct',
    'Nov',
    'Dec'
  ];
  final jh1 = DateTime.now().toString().substring(0, 10);
  String ss = jh1.toString();
  int oc = ss.indexOf("-");
  String sss = ss.substring(oc + 1, ss.length - 1);
  int oc2 = ss.length - 3;
  int mm = int.parse(ss.substring(oc + 1, oc2));
  String mounth = mounths[mm - 1];
  String date = ss.substring(ss.length - 2, ss.length) + '-' + mounth;

  return date;
}

getDate() {
  List mounths = [
    'Muḥarram',
    'Ṣafar',
    'Rabīʿ al-Awwal',
    'Rabīʿ al-Thānī',
    'Jumādā al-Awwal',
    'Jumādā al-Thānī',
    'Rajab',
    'Shaʿbān',
    'Ramaḍān',
    'Shawwāl',
    'Dhū al-Qaʿdah',
    'Dhū al-Ḥijjah'
  ];
  final jh1 = JHijri.now();
  String ss = jh1.toString();
  int oc = ss.indexOf("-");
  String sss = ss.substring(oc + 1, ss.length - 1);
  int oc2 = ss.length - 5;
  int mm = int.parse(ss.substring(oc + 1, oc2));
  String mounth = mounths[mm - 1];
  String date = mounth +
      ' ' +
      ss.substring(0, oc) +
      ', ' +
      ss.substring(ss.length - 4, ss.length);
  return date;
}

getDateg() {
  List mounths = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
    'August',
    'September',
    'October',
    'November',
    'December'
  ];
  final jh1 = DateTime.now().toString().substring(0, 10);
  String ss = jh1.toString();
  int oc = ss.indexOf("-");
  String sss = ss.substring(oc + 1, ss.length - 1);
  int oc2 = ss.length - 3;
  int mm = int.parse(ss.substring(oc + 1, oc2));
  String mounth = mounths[mm - 1];
  String date = ss.substring(ss.length - 2, ss.length) +
      ' ' +
      mounth +
      ' ' +
      ss.substring(0, oc);
  return date;
}

minutes() {
  if (DateTime.now().minute.toString().length == 1) {
    return '0' + DateTime.now().minute.toString();
  }
  return DateTime.now().minute.toString();
}

loadCSV(sst) {
  List SUNRISE = [
    "8:25",
    "8:25",
    "8:24",
    "8:24",
    "8:24",
    "8:23",
    "8:23",
    "8:22",
    "8:22",
    "8:21",
    "8:20",
    "8:19",
    "8:18",
    "8:18",
    "8:17",
    "8:16",
    "8:15",
    "8:13",
    "8:12",
    "8:12",
    "8:10",
    "8:09",
    "8:07",
    "8:06",
    "8:04",
    "8:03",
    "8:02",
    "8:00",
    "7:58",
    "7:57",
    "7:55",
    "7:54",
    "7:53",
    "7:51",
    "7:49",
    "7:47",
    "7:45",
    "7:44",
    "7:42",
    "7:40",
    "7:38",
    "7:36",
    "7:34",
    "7:32",
    "7:30",
    "7:28",
    "7:26",
    "7:24",
    "7:21",
    "7:19",
    "7:17",
    "7:15",
    "7:13",
    "7:11",
    "7:08",
    "7:06",
    "7:04",
    "7:02",
    "6:59",
    "6:57",
    "6:55",
    "6:52",
    "6:50",
    "6:48",
    "6:45",
    "6:43",
    "6:41",
    "6:38",
    "6:36",
    "6:34",
    "6:31",
    "6:29",
    "6:26",
    "6:24",
    "6:21",
    "6:19",
    "6:17",
    "6:14",
    "6:12",
    "6:09",
    "6:07",
    "6:04",
    "6:02",
    "6:00",
    "5:57",
    "6:55",
    "6:52",
    "6:50",
    "6:47",
    "6:45",
    "6:43",
    "6:40",
    "6:38",
    "6:35",
    "6:33",
    "6:31",
    "6:28",
    "6:26",
    "6:23",
    "6:21",
    "6:19",
    "6:16",
    "6:14",
    "6:12",
    "6:09",
    "6:07",
    "6:05",
    "6:03",
    "6:00",
    "5:58",
    "5:56",
    "5:54",
    "5:51",
    "5:49",
    "5:47",
    "5:45",
    "5:43",
    "5:41",
    "5:39",
    "5:37",
    "5:34",
    "5:32",
    "5:30",
    "5:29",
    "5:27",
    "5:25",
    "5:23",
    "5:21",
    "5:19",
    "5:17",
    "5:15",
    "5:14",
    "5:12",
    "5:10",
    "5:09",
    "5:07",
    "5:05",
    "5:04",
    "5:02",
    "5:01",
    "5:00",
    "4:58",
    "4:57",
    "4:56",
    "4:54",
    "4:53",
    "4:52",
    "4:51",
    "4:50",
    "4:49",
    "4:48",
    "4:47",
    "4:46",
    "4:45",
    "4:44",
    "4:44",
    "4:43",
    "4:42",
    "4:42",
    "4:41",
    "4:41",
    "4:41",
    "4:40",
    "4:40",
    "4:40",
    "4:40",
    "4:39",
    "4:39",
    "4:39",
    "4:40",
    "4:40",
    "4:40",
    "4:40",
    "4:40",
    "4:41",
    "4:41",
    "4:42",
    "4:42",
    "4:43",
    "4:43",
    "4:44",
    "4:45",
    "4:45",
    "4:46",
    "4:47",
    "4:48",
    "4:49",
    "4:50",
    "4:51",
    "4:52",
    "4:53",
    "4:54",
    "4:55",
    "4:57",
    "4:58",
    "4:59",
    "5:00",
    "5:02",
    "5:03",
    "5:05",
    "5:06",
    "5:07",
    "5:09",
    "5:10",
    "5:12",
    "5:13",
    "5:15",
    "5:17",
    "5:18",
    "5:20",
    "5:21",
    "5:23",
    "5:25",
    "5:26",
    "5:28",
    "5:30",
    "5:31",
    "5:33",
    "5:35",
    "5:36",
    "5:38",
    "5:40",
    "5:42",
    "5:43",
    "5:45",
    "5:47",
    "5:48",
    "5:50",
    "5:52",
    "5:54",
    "5:55",
    "5:57",
    "5:59",
    "6:01",
    "6:02",
    "6:04",
    "6:06",
    "6:08",
    "6:09",
    "6:11",
    "6:13",
    "6:15",
    "6:16"
  ];
  List DHUHRstart = [
    '12:13',
    '12:14',
    '12:14',
    '12:14',
    '12:14',
    '12:15',
    '12:16',
    '12:16',
    '12:17',
    '12:17',
    '12:17',
    '12:18',
    '12:18',
    '12:19',
    '12:19',
    '12:19',
    '12:20',
    '12:20',
    '12:20',
    '12:20',
    '12:21',
    '12:21',
    '12:21',
    '12:22',
    '12:22',
    '12:22',
    '12:22',
    '12:22',
    '12:23',
    '12:23',
    '12:23',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:28',
    '12:27',
    '12:27',
    '12:27',
    '12:27',
    '12:27',
    '12:27',
    '12:26',
    '12:26',
    '12:26',
    '12:26',
    '12:26',
    '12:25',
    '12:25',
    '12:25',
    '12:25',
    '12:24',
    '12:24',
    '12:24',
    '12:24',
    '12:23',
    '12:23',
    '12:23',
    '12:23',
    '12:22',
    '12:22',
    '12:22',
    '12:21',
    '12:21',
    '12:21',
    '12:21',
    '12:20',
    '12:20',
    '12:20',
    '1:19',
    '1:19',
    '1:19',
    '1:18',
    '1:18',
    '1:18',
    '1:18',
    '1:17',
    '1:17',
    '1:17',
    '1:16',
    '1:16',
    '1:16',
    '1:16',
    '1:15',
    '1:15',
    '1:15',
    '1:15',
    '1:14',
    '1:14',
    '1:14',
    '1:14',
    '1:13',
    '1:13',
    '1:13',
    '1:13',
    '1:12',
    '1:12',
    '1:12',
    '1:12',
    '1:12',
    '1:12',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:10',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:11',
    '1:12',
    '1:12',
    '1:12',
    '1:12',
    '1:12',
    '1:12',
    '1:12',
    '1:13',
    '1:13',
    '1:13',
    '1:13',
    '1:13',
    '1:14',
    '1:14',
    '1:14',
    '1:14',
    '1:14',
    '1:15',
    '1:15',
    '1:15',
    '1:15',
    '1:16',
    '1:16',
    '1:16',
    '1:16',
    '1:16',
    '1:17',
    '1:17',
    '1:17',
    '1:17',
    '1:17',
    '1:18',
    '1:18',
    '1:18',
    '1:18',
    '1:18',
    '1:19',
    '1:19',
    '1:19',
    '1:19',
    '1:19',
    '1:19',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:21',
    '1:21',
    '1:21',
    '1:21',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:20',
    '1:19',
    '1:19',
    '1:19',
    '1:19',
    '1:19',
    '1:19',
    '1:18',
    '1:18',
    '1:18',
    '1:18',
    '1:18',
    '1:17',
    '1:17',
    '1:17',
    '1:17',
    '1:16',
    '1:16',
    '1:16',
    '1:15',
    '1:15',
    '1:15',
    '1:15',
    '1:14'
  ];
  List ASRstart = [
    "1:45",
    "1:46",
    "1:47",
    "1:48",
    "1:48",
    "1:50",
    "1:52",
    "1:53",
    "1:54",
    "1:55",
    "1:57",
    "1:58",
    "1:59",
    "2:01",
    "2:02",
    "2:03",
    "2:05",
    "2:06",
    "2:08",
    "2:08",
    "2:11",
    "2:12",
    "2:14",
    "2:15",
    "2:17",
    "2:18",
    "2:20",
    "2:21",
    "2:23",
    "2:24",
    "2:26",
    "2:26",
    "2:28",
    "2:29",
    "2:31",
    "2:32",
    "2:34",
    "2:36",
    "2:37",
    "2:39",
    "2:40",
    "2:42",
    "2:43",
    "2:45",
    "2:46",
    "2:48",
    "2:49",
    "2:51",
    "2:52",
    "2:54",
    "2:55",
    "2:57",
    "2:58",
    "3:00",
    "3:01",
    "3:02",
    "3:04",
    "3:05",
    "3:07",
    "3:08",
    "3:09",
    "3:11",
    "3:12",
    "3:13",
    "3:15",
    "3:16",
    "3:17",
    "3:19",
    "3:20",
    "3:21",
    "3:22",
    "3:24",
    "3:25",
    "3:26",
    "3:27",
    "3:28",
    "3:29",
    "3:31",
    "3:32",
    "3:33",
    "3:34",
    "3:35",
    "3:36",
    "3:37",
    "3:38",
    "4:39",
    "4:40",
    "4:42",
    "4:43",
    "4:44",
    "4:45",
    "4:46",
    "4:47",
    "4:48",
    "4:48",
    "4:49",
    "4:50",
    "4:51",
    "4:52",
    "4:53",
    "4:54",
    "4:55",
    "4:56",
    "4:57",
    "4:58",
    "4:58",
    "4:59",
    "5:00",
    "5:01",
    "5:02",
    "5:03",
    "5:04",
    "5:04",
    "5:05",
    "5:06",
    "5:07",
    "5:08",
    "5:08",
    "5:09",
    "5:10",
    "5:11",
    "5:11",
    "5:12",
    "5:13",
    "5:14",
    "5:14",
    "5:15",
    "5:16",
    "5:16",
    "5:17",
    "5:18",
    "5:18",
    "5:19",
    "5:20",
    "5:20",
    "5:21",
    "5:22",
    "5:22",
    "5:23",
    "5:24",
    "5:24",
    "5:25",
    "5:25",
    "5:26",
    "5:27",
    "5:27",
    "5:28",
    "5:28",
    "5:29",
    "5:29",
    "5:30",
    "5:30",
    "5:31",
    "5:31",
    "5:32",
    "5:32",
    "5:33",
    "5:33",
    "5:34",
    "5:34",
    "5:34",
    "5:35",
    "5:35",
    "5:36",
    "5:36",
    "5:36",
    "5:37",
    "5:37",
    "5:37",
    "5:37",
    "5:38",
    "5:38",
    "5:38",
    "5:38",
    "5:38",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:39",
    "5:38",
    "5:38",
    "5:38",
    "5:38",
    "5:37",
    "5:37",
    "5:37",
    "5:37",
    "5:36",
    "5:36",
    "5:35",
    "5:35",
    "5:34",
    "5:34",
    "5:33",
    "5:33",
    "5:32",
    "5:32",
    "5:31",
    "5:30",
    "5:30",
    "5:29",
    "5:28",
    "5:28",
    "5:27",
    "5:26",
    "5:25",
    "5:24",
    "5:23",
    "5:23",
    "5:22",
    "5:21",
    "5:20",
    "5:19",
    "5:18",
    "5:17",
    "5:16",
    "5:14",
    "5:13",
    "5:12",
    "5:11",
    "5:10",
    "5:09",
    "5:07",
    "5:06",
    "5:05",
    "5:03",
    "5:02",
    "5:01",
    "4:59",
    "4:58",
    "4:57",
    "4:55",
    "4:54"
  ];
  List MAGHRIBstart = [
    '4:01',
    '4:02',
    '4:03',
    '4:04',
    '4:04',
    '4:07',
    '4:08',
    '4:10',
    '4:11',
    '4:13',
    '4:14',
    '4:16',
    '4:17',
    '4:19',
    '4:21',
    '4:22',
    '4:24',
    '4:26',
    '4:28',
    '4:28',
    '4:31',
    '4:33',
    '4:35',
    '4:37',
    '4:39',
    '4:41',
    '4:43',
    '4:44',
    '4:46',
    '4:48',
    '4:50',
    '4:55',
    '4:57',
    '4:59',
    '5:01',
    '5:03',
    '5:05',
    '5:07',
    '5:09',
    '5:11',
    '5:13',
    '5:14',
    '5:16',
    '5:18',
    '5:20',
    '5:22',
    '5:24',
    '5:26',
    '5:28',
    '5:30',
    '5:32',
    '5:34',
    '5:36',
    '5:38',
    '5:40',
    '5:42',
    '5:44',
    '5:46',
    '5:48',
    '5:50',
    '5:52',
    '5:53',
    '5:55',
    '5:57',
    '5:59',
    '6:01',
    '6:03',
    '6:05',
    '6:07',
    '6:09',
    '6:10',
    '6:12',
    '6:14',
    '6:16',
    '6:18',
    '6:20',
    '6:22',
    '6:23',
    '6:25',
    '6:27',
    '6:29',
    '6:31',
    '6:33',
    '6:34',
    '6:36',
    '7:38',
    '7:40',
    '7:42',
    '7:44',
    '7:45',
    '7:47',
    '7:49',
    '7:51',
    '7:53',
    '7:54',
    '7:56',
    '7:58',
    '8:00',
    '8:02',
    '8:04',
    '8:05',
    '8:07',
    '8:09',
    '8:11',
    '8:13',
    '8:14',
    '8:16',
    '8:18',
    '8:20',
    '8:22',
    '8:24',
    '8:25',
    '8:27',
    '8:29',
    '8:31',
    '8:33',
    '8:34',
    '8:36',
    '8:38',
    '8:40',
    '8:42',
    '8:43',
    '8:45',
    '8:47',
    '8:49',
    '8:51',
    '8:52',
    '8:54',
    '8:56',
    '8:57',
    '8:59',
    '9:01',
    '9:03',
    '9:04',
    '9:06',
    '9:07',
    '9:09',
    '9:11',
    '9:12',
    '9:14',
    '9:15',
    '9:17',
    '9:18',
    '9:20',
    '9:21',
    '9:23',
    '9:24',
    '9:25',
    '9:27',
    '9:28',
    '9:29',
    '9:30',
    '9:32',
    '9:33',
    '9:34',
    '9:35',
    '9:36',
    '9:37',
    '9:38',
    '9:38',
    '9:39',
    '9:40',
    '9:41',
    '9:41',
    '9:42',
    '9:43',
    '9:43',
    '9:44',
    '9:44',
    '9:44',
    '9:45',
    '9:45',
    '9:45',
    '9:45',
    '9:45',
    '9:45',
    '9:45',
    '9:45',
    '9:45',
    '9:45',
    '9:44',
    '9:44',
    '9:43',
    '9:43',
    '9:42',
    '9:42',
    '9:41',
    '9:41',
    '9:40',
    '9:39',
    '9:38',
    '9:37',
    '9:36',
    '9:35',
    '9:34',
    '9:33',
    '9:32',
    '9:31',
    '9:30',
    '9:28',
    '9:27',
    '9:26',
    '9:24',
    '9:23',
    '9:21',
    '9:20',
    '9:18',
    '9:17',
    '9:15',
    '9:13',
    '9:12',
    '9:10',
    '9:08',
    '9:06',
    '9:05',
    '9:03',
    '9:01',
    '8:59',
    '8:57',
    '8:55',
    '8:53',
    '8:51',
    '8:49',
    '8:47',
    '8:45',
    '8:43',
    '8:41',
    '8:38',
    '8:36',
    '8:34',
    '8:32',
    '8:30',
    '8:27',
    '8:25',
    '8:23',
    '8:21',
    '8:18',
    '8:16',
    '8:14',
    '8:11',
    '8:09',
    '8:07',
    '8:04'
  ];
  List ISHAstart = [
    '5:40',
    '5:41',
    '5:42',
    '5:43',
    '5:43',
    '5:45',
    '5:46',
    '5:47',
    '5:49',
    '5:50',
    '5:51',
    '5:52',
    '5:54',
    '5:55',
    '5:57',
    '5:58',
    '5:59',
    '6:01',
    '6:02',
    '6:02',
    '6:05',
    '6:07',
    '6:09',
    '6:10',
    '6:12',
    '6:13',
    '6:15',
    '6:17',
    '6:18',
    '6:20',
    '6:22',
    '6:21',
    '6:23',
    '6:25',
    '6:26',
    '6:28',
    '6:30',
    '6:31',
    '6:33',
    '6:35',
    '6:37',
    '6:38',
    '6:40',
    '6:42',
    '6:43',
    '6:45',
    '6:47',
    '6:49',
    '6:50',
    '6:52',
    '6:54',
    '6:55',
    '6:57',
    '6:59',
    '7:01',
    '7:02',
    '7:04',
    '7:06',
    '7:07',
    '7:09',
    '7:11',
    '7:12',
    '7:14',
    '7:16',
    '7:17',
    '7:19',
    '7:20',
    '7:22',
    '7:24',
    '7:25',
    '7:27',
    '7:29',
    '7:30',
    '7:32',
    '7:33',
    '7:35',
    '7:37',
    '7:38',
    '7:40',
    '7:42',
    '7:44',
    '7:46',
    '7:48',
    '7:49',
    '7:51',
    '8:53',
    '8:55',
    '8:57',
    '8:59',
    '9:00',
    '9:02',
    '9:04',
    '9:06',
    '9:08',
    '9:09',
    '9:11',
    '9:13',
    '9:15',
    '9:17',
    '9:19',
    '9:20',
    '9:22',
    '9:24',
    '9:26',
    '9:28',
    '9:29',
    '9:31',
    '9:33',
    '9:35',
    '9:37',
    '9:39',
    '9:40',
    '9:42',
    '9:44',
    '9:46',
    '9:48',
    '9:49',
    '9:51',
    '9:53',
    '9:55',
    '9:57',
    '9:58',
    '10:00',
    '10:02',
    '10:04',
    '10:06',
    '10:07',
    '10:09',
    '10:11',
    '10:12',
    '10:14',
    '10:16',
    '10:18',
    '10:19',
    '10:21',
    '10:22',
    '10:24',
    '10:26',
    '10:27',
    '10:29',
    '10:30',
    '10:32',
    '10:33',
    '10:35',
    '10:36',
    '10:38',
    '10:39',
    '10:40',
    '10:42',
    '10:43',
    '10:44',
    '10:45',
    '10:47',
    '10:48',
    '10:49',
    '10:50',
    '10:51',
    '10:52',
    '10:53',
    '10:53',
    '10:54',
    '10:55',
    '10:56',
    '10:56',
    '10:57',
    '10:58',
    '10:59',
    '11:00',
    '11:01',
    '11:01',
    '11:02',
    '11:02',
    '11:03',
    '11:03',
    '11:02',
    '11:02',
    '11:02',
    '11:01',
    '11:01',
    '11:00',
    '11:00',
    '10:59',
    '10:58',
    '10:57',
    '10:57',
    '10:56',
    '10:55',
    '10:54',
    '10:53',
    '10:52',
    '10:50',
    '10:49',
    '10:48',
    '10:47',
    '10:45',
    '10:44',
    '10:42',
    '10:41',
    '10:39',
    '10:38',
    '10:36',
    '10:34',
    '10:33',
    '10:31',
    '10:29',
    '10:27',
    '10:25',
    '10:23',
    '10:21',
    '10:19',
    '10:17',
    '10:15',
    '10:23',
    '10:21',
    '10:20',
    '10:18',
    '10:16',
    '10:14',
    '10:12',
    '10:10',
    '10:08',
    '10:06',
    '10:04',
    '10:02',
    '10:00',
    '21:58',
    '21:56',
    '21:53',
    '21:51',
    '21:49',
    '21:47',
    '21:45',
    '21:42',
    '21:40',
    '21:38',
    '21:36',
    '21:33',
    '21:31',
    '21:29',
    '21:26',
    '21:24',
    '21:22',
    '21:19'
  ];
  List fajrprayer = [
    '    7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '7:00',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:45',
    '6:30',
    '6:30',
    '6:30',
    '6:30',
    '6:30',
    '6:30',
    '6:30',
    '6:15',
    '6:15',
    '6:15',
    '6:15',
    '6:15',
    '6:15',
    '6:15',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '5:45',
    '5:45',
    '5:45',
    '5:45',
    '5:45',
    '5:45',
    '5:45',
    '5:30',
    '5:30',
    '5:30',
    '5:30',
    '5:30',
    '5:30',
    '5:30',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:00',
    '5:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '6:00',
    '5:45',
    '5:30',
    '5:30',
    '5:30',
    '5:30',
    '5:30',
    '5:30',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:15',
    '5:00',
    '5:00',
    '5:00',
    '5:00',
    '5:00',
    '5:00',
    '5:00',
    '4:45',
    '4:45',
    '4:45',
    '4:30',
    '4:30',
    '4:30',
    '4:30',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:30',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '3:45',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:00',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:15',
    '4:30',
    '4:30',
    '4:30',
    '4:30',
    '4:30',
    '4:30',
    '4:30',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '4:45',
    '5:00',
    '5:00',
    '5:00',
    '5:00',
    '5:00',
    '5:00'
  ];
  List Dhurprayer = [
    "    1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "1:00",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "15:11",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "13:00",
    "2:00",
    "2:00",
    "2:00",
    "2:00",
    "2:00",
    "2:00",
    "2:00",
    "2:00",
    "2:00",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "13:15",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "1:00",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "1:00",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "1:00",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "12:45",
    "1:00",
    "12:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:30",
    "1:45",
    "1:45",
    "1:45",
    "1:45",
    "1:45"
  ];
  List asrprayer = [
    '2:30',
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:30",
    "2:45",
    "2:45",
    "2:45",
    "2:45",
    "2:45",
    "2:45",
    "2:45",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:30",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "3:45",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:00",
    "4:15",
    "4:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:15",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:15",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "6:00",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:45",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30",
    "5:30"
  ];
  List maghribprayer = [
    "4:01",
    "4:02",
    "4:03",
    "4:04",
    "4:04",
    "4:07",
    "4:08",
    "4:10",
    "4:11",
    "4:13",
    "4:14",
    "4:16",
    "4:17",
    "4:19",
    "4:21",
    "4:22",
    "4:24",
    "4:26",
    "4:28",
    "4:28",
    "4:31",
    "4:33",
    "4:35",
    "4:37",
    "4:39",
    "4:41",
    "4:43",
    "4:44",
    "4:46",
    "4:48",
    "4:50",
    "4:55",
    "4:57",
    "4:59",
    "5:01",
    "5:03",
    "5:05",
    "5:07",
    "5:09",
    "5:11",
    "5:13",
    "5:14",
    "5:16",
    "5:18",
    "5:20",
    "5:22",
    "5:24",
    "5:26",
    "5:28",
    "5:30",
    "5:32",
    "5:34",
    "5:36",
    "5:38",
    "5:40",
    "5:42",
    "5:44",
    "5:51",
    "5:53",
    "5:55",
    "5:57",
    "5:58",
    "6:00",
    "6:02",
    "6:04",
    "6:06",
    "6:08",
    "6:10",
    "6:12",
    "6:14",
    "6:15",
    "6:17",
    "6:19",
    "6:21",
    "6:23",
    "6:25",
    "6:27",
    "6:28",
    "6:30",
    "6:32",
    "6:34",
    "6:36",
    "6:38",
    "6:39",
    "6:41",
    "7:43",
    "7:45",
    "7:47",
    "7:49",
    "7:50",
    "7:52",
    "7:54",
    "7:56",
    "7:58",
    "7:59",
    "8:01",
    "8:03",
    "8:05",
    "8:07",
    "8:09",
    "8:10",
    "8:12",
    "8:14",
    "8:16",
    "8:18",
    "8:19",
    "8:21",
    "8:23",
    "8:25",
    "8:27",
    "8:29",
    "8:30",
    "8:32",
    "8:34",
    "8:36",
    "8:38",
    "8:39",
    "8:41",
    "8:43",
    "8:45",
    "8:47",
    "8:48",
    "8:50",
    "8:52",
    "8:54",
    "8:56",
    "8:57",
    "8:59",
    "9:01",
    "9:02",
    "9:04",
    "9:06",
    "9:08",
    "9:09",
    "9:11",
    "9:12",
    "9:14",
    "9:16",
    "9:17",
    "9:19",
    "9:20",
    "9:22",
    "9:23",
    "9:25",
    "9:26",
    "9:28",
    "9:29",
    "9:30",
    "9:32",
    "9:33",
    "9:34",
    "9:35",
    "9:37",
    "9:38",
    "9:39",
    "9:40",
    "9:41",
    "9:42",
    "9:43",
    "9:43",
    "9:44",
    "9:45",
    "9:46",
    "9:46",
    "9:47",
    "9:48",
    "9:48",
    "9:49",
    "9:49",
    "9:49",
    "9:50",
    "9:50",
    "9:50",
    "9:50",
    "9:50",
    "9:50",
    "9:50",
    "9:50",
    "9:50",
    "9:50",
    "9:49",
    "9:49",
    "9:48",
    "9:48",
    "9:47",
    "9:47",
    "9:46",
    "9:46",
    "9:45",
    "9:44",
    "9:43",
    "9:42",
    "9:41",
    "9:40",
    "9:39",
    "9:38",
    "9:37",
    "9:36",
    "9:35",
    "9:33",
    "9:32",
    "9:31",
    "9:29",
    "9:28",
    "9:26",
    "9:25",
    "9:23",
    "9:22",
    "9:20",
    "9:18",
    "9:17",
    "9:15",
    "9:13",
    "9:11",
    "9:10",
    "9:08",
    "9:06",
    "9:04",
    "9:02",
    "9:00",
    "8:58",
    "8:56",
    "8:54",
    "8:52",
    "8:50",
    "8:48",
    "8:46",
    "8:43",
    "8:41",
    "8:39",
    "8:37",
    "8:35",
    "8:32",
    "8:30",
    "8:28",
    "8:26",
    "8:23",
    "8:21",
    "8:19",
    "8:16",
    "8:14",
    "8:12",
    "8:09"
  ];
  List ishaprayer = [
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "6:45",
    "7:00",
    "7:00",
    "7:00",
    "7:00",
    "7:00",
    "7:00",
    "7:00",
    "7:15",
    "7:15",
    "7:15",
    "7:15",
    "7:15",
    "7:15",
    "7:15",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:30",
    "7:45",
    "7:45",
    "7:45",
    "7:45",
    "7:45",
    "7:45",
    "7:45",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:00",
    "8:15",
    "8:15",
    "9:15",
    "9:15",
    "9:15",
    "9:15",
    "9:15",
    "9:30",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "9:45",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:00",
    "10:05",
    "10:07",
    "10:09",
    "10:11",
    "10:12",
    "10:14",
    "10:16",
    "10:17",
    "10:19",
    "10:21",
    "10:23",
    "10:24",
    "10:26",
    "10:27",
    "10:29",
    "10:31",
    "10:32",
    "10:34",
    "10:35",
    "10:37",
    "10:38",
    "10:40",
    "10:41",
    "10:43",
    "10:44",
    "10:45",
    "10:47",
    "10:48",
    "10:49",
    "10:50",
    "10:52",
    "10:53",
    "10:54",
    "10:55",
    "10:56",
    "10:57",
    "10:58",
    "10:58",
    "10:59",
    "11:00",
    "11:01",
    "11:01",
    "11:02",
    "11:03",
    "11:04",
    "11:05",
    "11:06",
    "11:06",
    "11:07",
    "11:07",
    "11:08",
    "11:08",
    "11:07",
    "11:07",
    "11:07",
    "11:06",
    "11:06",
    "11:05",
    "11:05",
    "11:04",
    "11:03",
    "11:02",
    "11:02",
    "11:01",
    "11:00",
    "10:59",
    "10:58",
    "10:57",
    "10:55",
    "10:54",
    "10:53",
    "10:52",
    "10:50",
    "10:49",
    "10:47",
    "10:46",
    "10:44",
    "10:43",
    "10:41",
    "10:39",
    "10:38",
    "10:36",
    "10:34",
    "10:32",
    "10:30",
    "10:28",
    "10:26",
    "10:24",
    "10:22",
    "10:20",
    "10:28",
    "10:26",
    "10:25",
    "10:23",
    "10:21",
    "10:19",
    "10:17",
    "10:15",
    "10:13",
    "10:11",
    "10:09",
    "22:07",
    "10:05",
    "10:03",
    "22:01",
    "21:58",
    "21:56",
    "21:54",
    "21:52",
    "21:50",
    "21:47",
    "21:45",
    "21:43",
    "21:41",
    "21:38",
    "21:36",
    "21:34",
    "21:31",
    "21:29",
    "21:27",
    "21:24"
  ];

  List fajrstart = [
    '6:47',
    '6:47',
    '6:46',
    '6:46',
    '6:46',
    '6:46',
    '6:45',
    '6:45',
    '6:45',
    '6:44',
    '6:44',
    '6:43',
    '6:43',
    '6:42',
    '6:41',
    '6:41',
    '6:40',
    '6:39',
    '6:38',
    '6:38',
    '6:36',
    '6:35',
    '6:34',
    '6:33',
    '6:32',
    '6:31',
    '6:29',
    '6:28',
    '6:27',
    '6:25',
    '6:24',
    '6:24',
    '6:23',
    '6:21',
    '6:19',
    '6:17',
    '6:15',
    '6:14',
    '6:12',
    '6:10',
    '6:08',
    '6:06',
    '6:04',
    '6:02',
    '6:00',
    '5:58',
    '5:56',
    '5:54',
    '5:51',
    '5:49',
    '5:47',
    '5:45',
    '5:43',
    '5:41',
    '5:38',
    '5:36',
    '5:34',
    '5:32',
    '5:29',
    '5:27',
    '5:25',
    '5:22',
    '5:20',
    '5:18',
    '5:15',
    '5:13',
    '5:11',
    '5:08',
    '5:06',
    '5:04',
    '5:01',
    '4:59',
    '4:56',
    '4:54',
    '4:51',
    '4:49',
    '4:47',
    '4:44',
    '4:42',
    '4:39',
    '4:37',
    '4:34',
    '4:32',
    '4:30',
    '4:27',
    '5:25',
    '5:22',
    '5:20',
    '5:17',
    '5:15',
    '5:13',
    '5:10',
    '5:08',
    '5:05',
    '5:03',
    '5:01',
    '4:58',
    '4:56',
    '4:53',
    '4:51',
    '4:49',
    '4:46',
    '4:44',
    '4:42',
    '4:39',
    '4:37',
    '4:35',
    '4:33',
    '4:30',
    '4:28',
    '4:26',
    '4:24',
    '4:21',
    '4:19',
    '4:17',
    '4:15',
    '4:13',
    '4:11',
    '4:09',
    '4:07',
    '4:04',
    '4:02',
    '4:00',
    '3:59',
    '3:57',
    '3:55',
    '3:53',
    '3:51',
    '3:49',
    '3:47',
    '3:45',
    '3:44',
    '3:42',
    '3:40',
    '3:39',
    '3:37',
    '3:35',
    '3:34',
    '3:32',
    '3:31',
    '3:30',
    '3:28',
    '3:27',
    '3:26',
    '3:24',
    '3:23',
    '3:22',
    '3:21',
    '3:20',
    '3:19',
    '3:18',
    '3:17',
    '3:16',
    '3:15',
    '3:14',
    '3:14',
    '3:13',
    '3:12',
    '3:12',
    '3:11',
    '3:11',
    '3:11',
    '3:10',
    '3:10',
    '3:10',
    '3:10',
    '3:09',
    '3:09',
    '3:09',
    '3:10',
    '3:10',
    '3:10',
    '3:10',
    '3:10',
    '3:11',
    '3:11',
    '3:12',
    '3:12',
    '3:13',
    '3:13',
    '3:14',
    '3:15',
    '3:15',
    '3:16',
    '3:17',
    '3:18',
    '3:19',
    '3:20',
    '3:21',
    '3:22',
    '3:23',
    '3:24',
    '3:25',
    '3:27',
    '3:28',
    '3:29',
    '3:30',
    '3:32',
    '3:33',
    '3:35',
    '3:36',
    '3:37',
    '3:39',
    '3:40',
    '3:42',
    '3:43',
    '3:45',
    '3:47',
    '3:48',
    '3:50',
    '3:51',
    '3:53',
    '3:55',
    '3:56',
    '3:58',
    '4:00',
    '4:01',
    '4:03',
    '4:05',
    '4:06',
    '4:08',
    '4:10',
    '4:12',
    '4:13',
    '4:15',
    '4:17',
    '4:18',
    '4:20',
    '4:22',
    '4:24',
    '4:25',
    '4:27',
    '4:29',
    '4:31',
    '4:32',
    '4:34',
    '4:36',
    '4:38',
    '4:39',
    '4:41',
    '4:43',
    '4:45',
    '4:46'
  ];
  List days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  final jh1 = DateTime.now().toString().substring(0, 10);
  String ss = jh1.toString();
  int oc = ss.indexOf("-");
  String sss = ss.substring(oc + 1, ss.length - 1);
  int oc2 = ss.length - 3;
  int mm = int.parse(ss.substring(oc + 1, oc2));
  int mounth = 0;
  for (var i = 0; i < mm - 1; i++) {
    mounth = days[i] + mounth;
  }
  if (sst == 'fs') {
    return fajrstart[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'fp') {
    return fajrprayer[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'ds') {
    return DHUHRstart[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'dp') {
    return Dhurprayer[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'as') {
    return ASRstart[mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'ap') {
    return asrprayer[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'ms') {
    return MAGHRIBstart[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'mp') {
    return maghribprayer[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'is') {
    return ISHAstart[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else if (sst == 'ip') {
    return ishaprayer[
        mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  } else {
    return SUNRISE[mounth + int.parse(ss.substring(ss.length - 2, ss.length))];
  }
}
